{"version":3,"file":"static/js/106.05ed7aed.chunk.js","mappings":"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","sources":["components/Cast.jsx","components/MovieDetails.jsx","components/Reviews.jsx","components/api.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from './api';\nimport styled from 'styled-components';\n\nconst CastContainer = styled.div`\n  margin-top: 20px;\n`;\n\nconst ActorName = styled.h3`\n  margin-bottom: 10px;\n`;\n\nconst ActorPhoto = styled.img`\n  width: 200px;\n  height: 350px;\n  object-fit: cover;\n`;\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchMovieCredits(movieId)\n      .then(data => setCast(data.cast))\n      .catch(error => console.error('Error:', error));\n  }, [movieId]);\n\n  return (\n    <div>      \n      {cast.map(actor => (\n        <CastContainer key={actor.id}>\n          <ActorName>{actor.name}</ActorName>\n          <ActorPhoto src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`} alt={actor.name} />\n          <p>Character: {actor.character}</p>\n        </CastContainer>\n      ))}\n    </div>\n  );\n};\n\nexport default Cast;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { fetchMovieDetails } from './api';\nimport Cast from './Cast';\nimport Reviews from './Reviews';\nimport styled from 'styled-components';\n\nconst MovieDetailsContainer = styled.div`\n  display: flex;\n  flex-direction: row;  \n`;\n\nconst MoviePoster = styled.img`\n  width: 280px;\n  height: 350px;\n  object-fit: cover;\n`;\n\nconst MovieInfoContainer = styled.div`\n  margin-left: 20px;\n`;\n\nconst AdditionalInfoContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst AdditionalInfoHeader = styled.h3`\n  margin-bottom: 10px;\n  font-size: 22px;\n`;\n\nconst AdditionalInfoLinks = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst GoBackContainer = styled.div`\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const [movie, setMovie] = useState(null);\n  const [activeTab, setActiveTab] = useState('');\n\n  useEffect(() => {\n    fetchMovieDetails(movieId)\n      .then(data => setMovie(data))\n      .catch(error => console.error('Error:', error));\n  }, [movieId]);\n\n  const handleTabClick = (tab) => {\n    setActiveTab(tab);\n  };\n\n  const handleGoBack = () => {\n    navigate(-1);\n  };\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  const userScorePercent = Math.round(movie.vote_average * 10);\n\n  return (\n    <div>\n      <GoBackContainer>\n        <Link onClick={handleGoBack} style={{ fontSize: '22px' }}>\n          <span>&#8592;</span> Go Back\n        </Link>\n      </GoBackContainer>\n      <MovieDetailsContainer>\n        <MoviePoster src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} />\n        <div>\n          <MovieInfoContainer>\n            <h2 style={{ fontSize: '32px' }}>{movie.title}</h2>\n            <p style={{ marginBottom: '10px', fontSize: '22px' }}><strong>User Score:</strong> {userScorePercent}%</p>\n            <p style={{ fontSize: '22px' }}><strong>Overview:</strong></p>\n            <p style={{ fontSize: '22px' }}>{movie.overview}</p>\n            <p style={{ fontSize: '22px' }}><strong>Genres:</strong></p>\n            <p style={{ fontSize: '22px' }}>{movie.genres.map(genre => genre.name).join(', ')}</p>\n          </MovieInfoContainer>\n          <AdditionalInfoContainer>\n            <AdditionalInfoHeader style={{ fontSize: '22px' }}>Additional Information</AdditionalInfoHeader>\n            <AdditionalInfoLinks>\n              <Link onClick={() => handleTabClick('cast')} style={{ fontSize: '22px' }}>Cast</Link>\n              <Link onClick={() => handleTabClick('reviews')} style={{ fontSize: '22px' }}>Reviews</Link>\n            </AdditionalInfoLinks>\n          </AdditionalInfoContainer>\n        </div>\n      </MovieDetailsContainer>\n      <div>\n        {activeTab === 'cast' && <Cast />}\n        {activeTab === 'reviews' && <Reviews />}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieReviews } from './api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId)\n      .then(data => setReviews(data.results))\n      .catch(error => console.error('Error:', error));\n  }, [movieId]);\n\n  return (\n    <div>      \n      {reviews.map(review => (\n        <div key={review.id}>\n          <h3>{review.author}</h3>\n          <p>{review.content}</p>\n        </div>\n      ))}\n\n      <Link to={`/movies/${movieId}`} state={{ from: location }}>\n        Go back to Movie Details\n      </Link>\n    </div>\n  );\n};\n\nexport default Reviews;\n","const API_KEY = '05a2fb56bd80310a95255105f59556f4';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingMovies = () => {\n  const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}`;\n  return fetch(url).then(response => response.json());\n};\n\nconst fetchMoviesByKeyword = keyword => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${keyword}`;\n  return fetch(url).then(response => response.json());\n};\n\nconst fetchMovieDetails = movieId => {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n  return fetch(url).then(response => response.json());\n};\n\nconst fetchMovieCredits = movieId => {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  return fetch(url).then(response => response.json());\n};\n\nconst fetchMovieReviews = movieId => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  return fetch(url).then(response => response.json());\n};\n\nexport {\n  fetchTrendingMovies,\n  fetchMoviesByKeyword,\n  fetchMovieDetails,\n  fetchMovieCredits,\n  fetchMovieReviews,\n};"],"names":["CastContainer","styled","_templateObject","_taggedTemplateLiteral","ActorName","_templateObject2","ActorPhoto","_templateObject3","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchMovieCredits","then","data","catch","error","console","_jsx","children","map","actor","_jsxs","name","src","concat","profile_path","alt","character","id","MovieDetailsContainer","MoviePoster","MovieInfoContainer","AdditionalInfoContainer","_templateObject4","AdditionalInfoHeader","_templateObject5","AdditionalInfoLinks","_templateObject6","GoBackContainer","_templateObject7","navigate","useNavigate","movie","setMovie","_useState3","_useState4","activeTab","setActiveTab","fetchMovieDetails","handleTabClick","tab","userScorePercent","Math","round","vote_average","Link","onClick","style","fontSize","poster_path","title","marginBottom","overview","genres","genre","join","Cast","Reviews","location","useLocation","reviews","setReviews","fetchMovieReviews","results","review","author","content","to","state","from","API_KEY","BASE_URL","fetchTrendingMovies","url","fetch","response","json","fetchMoviesByKeyword","keyword"],"sourceRoot":""}